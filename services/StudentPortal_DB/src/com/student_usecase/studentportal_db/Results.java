/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.student_usecase.studentportal_db;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.Date;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.IdClass;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Results generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`RESULTS`")
@IdClass(ResultsId.class)
public class Results implements Serializable {

    private Date academicYear;
    private String standard;
    private Integer studentId;
    private Integer testId;
    private Integer subjectId;
    private Short marksSecured;
    private int gradeId;
    private AcademicTestSubjects academicTestSubjects;
    private GradeDetails gradeDetails;
    private StudentDetails studentDetails;

    @Id
    @Temporal(TemporalType.DATE)
    @Column(name = "`ACADEMIC_YEAR`", nullable = false)
    public Date getAcademicYear() {
        return this.academicYear;
    }

    public void setAcademicYear(Date academicYear) {
        this.academicYear = academicYear;
    }

    @Id
    @Column(name = "`STANDARD`", nullable = false, length = 255)
    public String getStandard() {
        return this.standard;
    }

    public void setStandard(String standard) {
        this.standard = standard;
    }

    @Id
    @Column(name = "`STUDENT_ID`", nullable = false, scale = 0, precision = 10)
    public Integer getStudentId() {
        return this.studentId;
    }

    public void setStudentId(Integer studentId) {
        this.studentId = studentId;
    }

    @Id
    @Column(name = "`TEST_ID`", nullable = false, scale = 0, precision = 10)
    public Integer getTestId() {
        return this.testId;
    }

    public void setTestId(Integer testId) {
        this.testId = testId;
    }

    @Id
    @Column(name = "`SUBJECT_ID`", nullable = false, scale = 0, precision = 10)
    public Integer getSubjectId() {
        return this.subjectId;
    }

    public void setSubjectId(Integer subjectId) {
        this.subjectId = subjectId;
    }

    @Column(name = "`MARKS_SECURED`", nullable = true, scale = 0, precision = 5)
    public Short getMarksSecured() {
        return this.marksSecured;
    }

    public void setMarksSecured(Short marksSecured) {
        this.marksSecured = marksSecured;
    }

    @Column(name = "`GRADE_ID`", nullable = false, scale = 0, precision = 10)
    public int getGradeId() {
        return this.gradeId;
    }

    public void setGradeId(int gradeId) {
        this.gradeId = gradeId;
    }

    
    
    public AcademicTestSubjects getAcademicTestSubjects() {
        return this.academicTestSubjects;
    }

    public void setAcademicTestSubjects(AcademicTestSubjects academicTestSubjects) {
        if(academicTestSubjects != null) {
            this.academicYear = academicTestSubjects.getAcademicYear();
            this.standard = academicTestSubjects.getStandard();
            this.testId = academicTestSubjects.getTestId();
            this.subjectId = academicTestSubjects.getSubjectId();
        }

        this.academicTestSubjects = academicTestSubjects;
    }

    
    
    public GradeDetails getGradeDetails() {
        return this.gradeDetails;
    }

    public void setGradeDetails(GradeDetails gradeDetails) {
        if(gradeDetails != null) {
            this.gradeId = gradeDetails.getGradeId();
        }

        this.gradeDetails = gradeDetails;
    }

    
    
    public StudentDetails getStudentDetails() {
        return this.studentDetails;
    }

    public void setStudentDetails(StudentDetails studentDetails) {
        if(studentDetails != null) {
            this.studentId = studentDetails.getStudentId();
        }

        this.studentDetails = studentDetails;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Results)) return false;
        final Results results = (Results) o;
        return Objects.equals(getAcademicYear(), results.getAcademicYear()) &&
                Objects.equals(getStandard(), results.getStandard()) &&
                Objects.equals(getStudentId(), results.getStudentId()) &&
                Objects.equals(getTestId(), results.getTestId()) &&
                Objects.equals(getSubjectId(), results.getSubjectId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getAcademicYear(),
                getStandard(),
                getStudentId(),
                getTestId(),
                getSubjectId());
    }
}

