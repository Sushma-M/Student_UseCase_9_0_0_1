/*Copyright (c) 2016-2017 wavemaker.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.student_usecase.studentportal_db;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Subjects generated by WaveMaker Studio.
 */
@Entity
@Table(name = "`SUBJECTS`")
public class Subjects implements Serializable {

    private Integer subjectId;
    private String subjectName;
    private List<AcademicSubjects> academicSubjectses = new ArrayList<>();

    @Id
    @Column(name = "`SUBJECT_ID`", nullable = false, scale = 0, precision = 10)
    public Integer getSubjectId() {
        return this.subjectId;
    }

    public void setSubjectId(Integer subjectId) {
        this.subjectId = subjectId;
    }

    @Column(name = "`SUBJECT_NAME`", nullable = true, length = 255)
    public String getSubjectName() {
        return this.subjectName;
    }

    public void setSubjectName(String subjectName) {
        this.subjectName = subjectName;
    }

    
    public List<AcademicSubjects> getAcademicSubjectses() {
        return this.academicSubjectses;
    }

    public void setAcademicSubjectses(List<AcademicSubjects> academicSubjectses) {
        this.academicSubjectses = academicSubjectses;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Subjects)) return false;
        final Subjects subjects = (Subjects) o;
        return Objects.equals(getSubjectId(), subjects.getSubjectId());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getSubjectId());
    }
}

